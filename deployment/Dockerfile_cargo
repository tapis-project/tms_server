# 
# Use cargo to build docker image for TMS server
#
# Start with rust image for the build
FROM rust:1.78.0 as build

# Set up directory with cargo project
RUN USER=root cargo new --bin tms_server

WORKDIR /tms_server

# Copy build setup
COPY ./Cargo.lock ./Cargo.lock
COPY ./Cargo.toml ./Cargo.toml

# Build dependencies for caching
RUN cargo build --release
RUN rm -fr src/*.rs

# Copy source and resources
COPY ./.git ./.git
COPY ./build.rs ./build.rs
COPY ./src ./src
COPY ./resources ./resources

# Build release
RUN rm -fr ./target/release/deps/tms_server*
RUN cargo build --release

# Switch to final base image
FROM debian:bookworm-slim

# Install less and vim. Add user tapistms
RUN apt update && apt install -y less vim-tiny && useradd -m tapistms

# Create directory for installing build atifacts and switch to it
RUN mkdir -p /opt/tms
WORKDIR /opt/tms

# Final copy of artifacts from build image
COPY --from=build /tms_server/target/release/tms_server .
COPY --from=build /tms_server/resources ./resources

# Become the user we will run as and switch to directory where the server is installed
USER tapistms
WORKDIR /opt/tms

# Initial TMS setup will be done by running the image with separate commands
#RUN /opt/tms/tms_server --create-dirs-only
#RUN cd /opt/tms/tms_server/resources; ./install-resources.sh ~/.tms

CMD ["./tms_server"]
